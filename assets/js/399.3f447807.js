(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{703:function(t,a,r){"use strict";r.r(a);var e=r(2),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"面向对象的特征"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的特征","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象的特征")]),t._v(" "),r("p",[t._v("面向对象的三个基本特征是：封装、继承、多态。")]),t._v(" "),r("h2",{attrs:{id:"封装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#封装","aria-hidden":"true"}},[t._v("#")]),t._v(" 封装")]),t._v(" "),r("p",[t._v("封装最好理解了。封装是面向对象的特征之一，是对象和类概念的主要特性。\n封装，也就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。")]),t._v(" "),r("h2",{attrs:{id:"继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),r("p",[t._v("面向对象编程 (OOP) 语言的一个主要功能就是“继承”。继承是指这样一种能力：它可以使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。")]),t._v(" "),r("h2",{attrs:{id:"多态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多态","aria-hidden":"true"}},[t._v("#")]),t._v(" 多态")]),t._v(" "),r("p",[t._v("多态性（polymorphisn）是允许你将父对象设置成为和一个或更多的他的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同的方式运作。简单的说，就是一句话：允许将子类类型的指针赋值给父类类型的指针。\n实现多态，有二种方式，覆盖，重载。")])])},[],!1,null,null,null);a.default=s.exports}}]);