(window.webpackJsonp=window.webpackJsonp||[]).push([[292],{839:function(e,t,a){"use strict";a.r(t);var s=a(2),v=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"equals-与-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#equals-与-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" equals 与 == 的区别")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("==")]),e._v(" 与"),a("code",[e._v("equals")]),e._v(" 的主要区别是："),a("code",[e._v("==")]),e._v(" 常用于比较原生类型，而 "),a("code",[e._v("equals()")]),e._v(" 方法用于检查对象的相等性。")]),e._v(" "),a("li",[e._v("另一个不同的点是：如果 "),a("code",[e._v("==")]),e._v(" 和 "),a("code",[e._v("equals()")]),e._v(" 用于比较对象，当两个引用地址相同，"),a("code",[e._v("==")]),e._v(" 返回 true。而 "),a("code",[e._v("equals()")]),e._v(" 可以返回 true 或者 false 主要取决于重写实现。最常见的一个例子，字符串的比较，不同情况 "),a("code",[e._v("==")]),e._v(" 和 "),a("code",[e._v("equals()")]),e._v(" 返回不同的结果。")])])])},[],!1,null,null,null);t.default=v.exports}}]);