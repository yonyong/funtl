(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{510:function(a,s,e){"use strict";e.r(s);var t=e(2),r=Object(t.a)({},function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"yaml-配置文件语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml-配置文件语言","aria-hidden":"true"}},[a._v("#")]),a._v(" YAML 配置文件语言")]),a._v(" "),e("h2",{attrs:{id:"本节视频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本节视频","aria-hidden":"true"}},[a._v("#")]),a._v(" 本节视频")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.bilibili.com/video/av27548295",target:"_blank",rel:"noopener noreferrer"}},[a._v("【视频】基础设施即服务-Docker Compose-YAML 配置文件语言"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),e("p",[a._v("YAML 是专门用来写配置文件的语言，非常简洁和强大，远比 JSON 格式方便。")]),a._v(" "),e("p",[a._v("YAML 语言的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。它的基本语法规则如下：")]),a._v(" "),e("ul",[e("li",[a._v("大小写敏感")]),a._v(" "),e("li",[a._v("使用缩进表示层级关系")]),a._v(" "),e("li",[a._v("缩进时不允许使用Tab键，只允许使用空格。")]),a._v(" "),e("li",[a._v("缩进的空格数目不重要，只要相同层级的元素左侧对齐即可")])]),a._v(" "),e("p",[e("code",[a._v("#")]),a._v(" 表示注释，从这个字符一直到行尾，都会被解析器忽略。")]),a._v(" "),e("p",[a._v("YAML 支持的数据结构有三种：")]),a._v(" "),e("ul",[e("li",[a._v("对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）")]),a._v(" "),e("li",[a._v("数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）")]),a._v(" "),e("li",[a._v("纯量（scalars）：单个的、不可再分的值")])]),a._v(" "),e("h2",{attrs:{id:"对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象","aria-hidden":"true"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),e("p",[a._v("对象的一组键值对，使用冒号结构表示")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("animal: pets\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组","aria-hidden":"true"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),e("p",[a._v("一组连词线开头的行，构成一个数组")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- Cat\n- Dog\n- Goldfish\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("数据结构的子成员是一个数组，则可以在该项下面缩进一个空格")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- Array\n - Cat\n - Dog\n - Goldfish\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h2",{attrs:{id:"复合结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复合结构","aria-hidden":"true"}},[a._v("#")]),a._v(" 复合结构")]),a._v(" "),e("p",[a._v("对象和数组可以结合使用，形成复合结构")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("languages:\n - Ruby\n - Perl\n - Python \nwebsites:\n YAML: yaml.org \n Ruby: ruby-lang.org \n Python: python.org \n Perl: use.perl.org \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("h2",{attrs:{id:"纯量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#纯量","aria-hidden":"true"}},[a._v("#")]),a._v(" 纯量")]),a._v(" "),e("p",[a._v("纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量")]),a._v(" "),e("ul",[e("li",[a._v("字符串")]),a._v(" "),e("li",[a._v("布尔值")]),a._v(" "),e("li",[a._v("整数")]),a._v(" "),e("li",[a._v("浮点数")]),a._v(" "),e("li",[a._v("Null")]),a._v(" "),e("li",[a._v("时间")]),a._v(" "),e("li",[a._v("日期")])])])},[],!1,null,null,null);s.default=r.exports}}]);